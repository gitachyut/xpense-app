{"version":3,"file":"xpense-api.umd.js.map","sources":["ng://xpense-api/lib/app.config.ts","ng://xpense-api/lib/xpense-api.module.ts","ng://xpense-api/lib/models/CategoryItem.ts","ng://xpense-api/lib/models/CategoryItemVM.ts","ng://xpense-api/lib/models/ExpenseItem.ts","ng://xpense-api/lib/models/ExpenseItemVM.ts","ng://xpense-api/lib/services/category/category.service.ts","ng://xpense-api/lib/services/expense/expense.service.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\n\nexport let APP_CONFIG = new InjectionToken<IAppConfig>(\"app.config\");\n\nexport interface IAppConfig {\n    apiEndpoint: string;\n    categoriesApi: string;\n    expensesApi: string;\n}\n\nexport const AppConfig: IAppConfig = {\n    apiEndpoint: \"https://gentle-shelf-74899.herokuapp.com/api/\",\n    categoriesApi: \"categories/\",\n    expensesApi: \"items/\"\n};","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { APP_CONFIG, AppConfig } from './app.config';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [],\n  providers: [\n    { provide: APP_CONFIG, useValue: AppConfig }\n  ]\n})\nexport class XpenseApiModule { }\n","export class CategoryItem {\n    public constructor(\n        public label: string,\n        public description: string) {\n\n    }\n\n    static from(data: any): CategoryItem {\n        return new CategoryItem(\n            data.label,\n            data.description);\n    }\n}","export class CategoryItemVM {\n\n    get createdOn(): Date { return new Date(this._createdOn); }\n    get updatedOn(): Date { return new Date(this._updatedOn); }\n\n    public constructor(\n        public id: number,\n        public label: string,\n        public description: string,\n        private _createdOn: string,\n        private _updatedOn: string) {\n        if (!id || !label)\n            throw new TypeError(`required fields id and label are missing`);\n    }\n\n    static from(data: any): CategoryItemVM {\n        if (typeof data !== \"object\" || Array.isArray(data))\n            throw new TypeError(`Expected object but got ${typeof data}`);\n        return new CategoryItemVM(\n            data.id,\n            data.label,\n            data.description,\n            data.createdOn,\n            data.updatedOn);\n    }\n}","export class ExpenseItem {\n    public constructor(\n        public heading: string,\n        public cost: number,\n        public spendDate: Date,\n        public categoryId: number,\n        public notes: string) {\n\n    }\n\n    static from(data: any): ExpenseItem {\n        return new ExpenseItem(\n            data.heading,\n            data.cost,\n            data.spendDate,\n            data.categoryId,\n            data.notes);\n    }\n}","import { CategoryItemVM } from './CategoryItemVM';\n\nexport class ExpenseItemVM {\n\n    get spendDate(): Date { return new Date(this._spendDate); }\n    get createdOn(): Date { return new Date(this._createdOn); }\n    get updatedOn(): Date { return new Date(this._updatedOn); }\n\n    public constructor(\n        public id: number,\n        public heading: string,\n        public cost: number,\n        private _spendDate: string,\n        public category: CategoryItemVM,\n        public notes: string,\n        private _createdOn: string,\n        private _updatedOn: string) {\n\n    }\n\n    static from(data: any): ExpenseItemVM {\n        return new ExpenseItemVM(\n            data.id,\n            data.heading,\n            data.cost,\n            data.spendDate,\n            CategoryItemVM.from(data.category),\n            data.notes,\n            data.createdOn,\n            data.updatedOn);\n    }\n}","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { CategoryItemVM } from '../../models/CategoryItemVM';\nimport { CategoryItem } from '../../models/CategoryItem';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { APP_CONFIG, IAppConfig } from '../../app.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  private _base_url: string;\n  private _api_path: string;\n\n  constructor(private _http: HttpClient, @Inject(APP_CONFIG) private _config: IAppConfig) {\n    this._base_url = this._config.apiEndpoint;\n    this._api_path = this._config.categoriesApi;\n  }\n\n  getAll(): Observable<CategoryItemVM[]> {\n    return this._http.get(`${this._base_url}${this._api_path}`)\n      .pipe(map((data: Array<CategoryItemVM>) => data.map(inst => CategoryItemVM.from(inst))))\n  }\n\n  get(id: number): Observable<CategoryItemVM> {\n    return this._http.get(`${this._base_url}${this._api_path}${id}`)\n      .pipe(map((data: CategoryItemVM) => CategoryItemVM.from(data)))\n  }\n\n  create(data: CategoryItem): Observable<CategoryItemVM> {\n    return this._http.post(`${this._base_url}${this._api_path}`, data)\n      .pipe(map((data: CategoryItemVM) => CategoryItemVM.from(data)))\n  }\n\n  update(id: number, data: CategoryItem): Observable<CategoryItemVM> {\n    return this._http.put(`${this._base_url}${this._api_path}${id}`, data)\n      .pipe(map((data: CategoryItemVM) => CategoryItemVM.from(data)))\n  }\n\n  delete(id: number): Observable<void> {\n    return this._http.delete(`${this._base_url}${this._api_path}${id}`)\n      .pipe(map(() => { }))\n  }\n\n  deleteMany(ids: number[]): Observable<void> {\n    let idx = ids.map(id => id.toString());\n    return this._http.delete(`${this._base_url}${this._api_path}batch`, { params: { ids: idx } })\n      .pipe(map(() => { }))\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ExpenseItem } from '../../models/ExpenseItem';\nimport { ExpenseItemVM } from '../../models/ExpenseItemVM';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { APP_CONFIG, IAppConfig } from '../../app.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpenseService {\n\n  private _base_url: string;\n  private _api_path: string;\n\n  constructor(private _http: HttpClient, @Inject(APP_CONFIG) private _config: IAppConfig) {\n    this._base_url = this._config.apiEndpoint;\n    this._api_path = this._config.expensesApi;\n  }\n\n  getAll(): Observable<ExpenseItemVM[]> {\n    return this._http.get(`${this._base_url}${this._api_path}`)\n      .pipe(map((data: Array<ExpenseItemVM>) => data.map(inst => ExpenseItemVM.from(inst))))\n  }\n\n  get(id: number): Observable<ExpenseItemVM> {\n    return this._http.get(`${this._base_url}${this._api_path}${id}`)\n      .pipe(map((data: ExpenseItemVM) => ExpenseItemVM.from(data)))\n  }\n\n  create(data: ExpenseItem): Observable<ExpenseItemVM> {\n    return this._http.post(`${this._base_url}${this._api_path}`, data)\n      .pipe(map((data: ExpenseItemVM) => ExpenseItemVM.from(data)))\n  }\n\n  update(id: number, data: ExpenseItem): Observable<ExpenseItemVM> {\n    return this._http.put(`${this._base_url}${this._api_path}${id}`, data)\n      .pipe(map((data: ExpenseItemVM) => ExpenseItemVM.from(data)))\n  }\n\n  delete(id: number): Observable<void> {\n    return this._http.delete(`${this._base_url}${this._api_path}${id}`)\n      .pipe(map(() => { }))\n  }\n\n  deleteMany(ids: number[]): Observable<void> {\n    let idx = ids.map(id => id.toString());\n    return this._http.delete(`${this._base_url}${this._api_path}batch`, { params: { ids: idx } })\n      .pipe(map(() => { }))\n  }\n}\n"],"names":["InjectionToken","NgModule","CommonModule","HttpClientModule","map","Injectable","HttpClient","Inject"],"mappings":"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"}
