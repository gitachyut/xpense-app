{"version":3,"file":"xpense-api.js.map","sources":["ng://xpense-api/lib/app.config.ts","ng://xpense-api/lib/xpense-api.module.ts","ng://xpense-api/lib/models/CategoryItem.ts","ng://xpense-api/lib/models/CategoryItemVM.ts","ng://xpense-api/lib/models/ExpenseItem.ts","ng://xpense-api/lib/models/ExpenseItemVM.ts","ng://xpense-api/lib/services/category/category.service.ts","ng://xpense-api/lib/services/expense/expense.service.ts"],"sourcesContent":["import { InjectionToken } from \"@angular/core\";\n\nexport let APP_CONFIG = new InjectionToken<IAppConfig>(\"app.config\");\n\nexport interface IAppConfig {\n    apiEndpoint: string;\n    categoriesApi: string;\n    expensesApi: string;\n}\n\nexport const AppConfig: IAppConfig = {\n    apiEndpoint: \"https://gentle-shelf-74899.herokuapp.com/api/\",\n    categoriesApi: \"categories/\",\n    expensesApi: \"items/\"\n};","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { APP_CONFIG, AppConfig } from './app.config';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [],\n  providers: [\n    { provide: APP_CONFIG, useValue: AppConfig }\n  ]\n})\nexport class XpenseApiModule { }\n","export class CategoryItem {\n    public constructor(\n        public label: string,\n        public description: string) {\n\n    }\n\n    static from(data: any): CategoryItem {\n        return new CategoryItem(\n            data.label,\n            data.description);\n    }\n}","export class CategoryItemVM {\n\n    get createdOn(): Date { return new Date(this._createdOn); }\n    get updatedOn(): Date { return new Date(this._updatedOn); }\n\n    public constructor(\n        public id: number,\n        public label: string,\n        public description: string,\n        private _createdOn: string,\n        private _updatedOn: string) {\n        if (!id || !label)\n            throw new TypeError(`required fields id and label are missing`);\n    }\n\n    static from(data: any): CategoryItemVM {\n        if (typeof data !== \"object\" || Array.isArray(data))\n            throw new TypeError(`Expected object but got ${typeof data}`);\n        return new CategoryItemVM(\n            data.id,\n            data.label,\n            data.description,\n            data.createdOn,\n            data.updatedOn);\n    }\n}","export class ExpenseItem {\n    public constructor(\n        public heading: string,\n        public cost: number,\n        public spendDate: Date,\n        public categoryId: number,\n        public notes: string) {\n\n    }\n\n    static from(data: any): ExpenseItem {\n        return new ExpenseItem(\n            data.heading,\n            data.cost,\n            data.spendDate,\n            data.categoryId,\n            data.notes);\n    }\n}","import { CategoryItemVM } from './CategoryItemVM';\n\nexport class ExpenseItemVM {\n\n    get spendDate(): Date { return new Date(this._spendDate); }\n    get createdOn(): Date { return new Date(this._createdOn); }\n    get updatedOn(): Date { return new Date(this._updatedOn); }\n\n    public constructor(\n        public id: number,\n        public heading: string,\n        public cost: number,\n        private _spendDate: string,\n        public category: CategoryItemVM,\n        public notes: string,\n        private _createdOn: string,\n        private _updatedOn: string) {\n\n    }\n\n    static from(data: any): ExpenseItemVM {\n        return new ExpenseItemVM(\n            data.id,\n            data.heading,\n            data.cost,\n            data.spendDate,\n            CategoryItemVM.from(data.category),\n            data.notes,\n            data.createdOn,\n            data.updatedOn);\n    }\n}","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { CategoryItemVM } from '../../models/CategoryItemVM';\nimport { CategoryItem } from '../../models/CategoryItem';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { APP_CONFIG, IAppConfig } from '../../app.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  private _base_url: string;\n  private _api_path: string;\n\n  constructor(private _http: HttpClient, @Inject(APP_CONFIG) private _config: IAppConfig) {\n    this._base_url = this._config.apiEndpoint;\n    this._api_path = this._config.categoriesApi;\n  }\n\n  getAll(): Observable<CategoryItemVM[]> {\n    return this._http.get(`${this._base_url}${this._api_path}`)\n      .pipe(map((data: Array<CategoryItemVM>) => data.map(inst => CategoryItemVM.from(inst))))\n  }\n\n  get(id: number): Observable<CategoryItemVM> {\n    return this._http.get(`${this._base_url}${this._api_path}${id}`)\n      .pipe(map((data: CategoryItemVM) => CategoryItemVM.from(data)))\n  }\n\n  create(data: CategoryItem): Observable<CategoryItemVM> {\n    return this._http.post(`${this._base_url}${this._api_path}`, data)\n      .pipe(map((data: CategoryItemVM) => CategoryItemVM.from(data)))\n  }\n\n  update(id: number, data: CategoryItem): Observable<CategoryItemVM> {\n    return this._http.put(`${this._base_url}${this._api_path}${id}`, data)\n      .pipe(map((data: CategoryItemVM) => CategoryItemVM.from(data)))\n  }\n\n  delete(id: number): Observable<void> {\n    return this._http.delete(`${this._base_url}${this._api_path}${id}`)\n      .pipe(map(() => { }))\n  }\n\n  deleteMany(ids: number[]): Observable<void> {\n    let idx = ids.map(id => id.toString());\n    return this._http.delete(`${this._base_url}${this._api_path}batch`, { params: { ids: idx } })\n      .pipe(map(() => { }))\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ExpenseItem } from '../../models/ExpenseItem';\nimport { ExpenseItemVM } from '../../models/ExpenseItemVM';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { APP_CONFIG, IAppConfig } from '../../app.config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExpenseService {\n\n  private _base_url: string;\n  private _api_path: string;\n\n  constructor(private _http: HttpClient, @Inject(APP_CONFIG) private _config: IAppConfig) {\n    this._base_url = this._config.apiEndpoint;\n    this._api_path = this._config.expensesApi;\n  }\n\n  getAll(): Observable<ExpenseItemVM[]> {\n    return this._http.get(`${this._base_url}${this._api_path}`)\n      .pipe(map((data: Array<ExpenseItemVM>) => data.map(inst => ExpenseItemVM.from(inst))))\n  }\n\n  get(id: number): Observable<ExpenseItemVM> {\n    return this._http.get(`${this._base_url}${this._api_path}${id}`)\n      .pipe(map((data: ExpenseItemVM) => ExpenseItemVM.from(data)))\n  }\n\n  create(data: ExpenseItem): Observable<ExpenseItemVM> {\n    return this._http.post(`${this._base_url}${this._api_path}`, data)\n      .pipe(map((data: ExpenseItemVM) => ExpenseItemVM.from(data)))\n  }\n\n  update(id: number, data: ExpenseItem): Observable<ExpenseItemVM> {\n    return this._http.put(`${this._base_url}${this._api_path}${id}`, data)\n      .pipe(map((data: ExpenseItemVM) => ExpenseItemVM.from(data)))\n  }\n\n  delete(id: number): Observable<void> {\n    return this._http.delete(`${this._base_url}${this._api_path}${id}`)\n      .pipe(map(() => { }))\n  }\n\n  deleteMany(ids: number[]): Observable<void> {\n    let idx = ids.map(id => id.toString());\n    return this._http.delete(`${this._base_url}${this._api_path}batch`, { params: { ids: idx } })\n      .pipe(map(() => { }))\n  }\n}\n"],"names":[],"mappings":"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"}
